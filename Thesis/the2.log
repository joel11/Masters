This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) (preloaded format=pdflatex 2018.1.31)  20 JAN 2020 19:55
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**the2.tex
(./the2.tex
LaTeX2e <2017-04-15>
Babel <3.10> and hyphenation patterns for 84 language(s) loaded.
(/usr/local/texlive/2017/texmf-dist/tex/latex/base/article.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
(/usr/local/texlive/2017/texmf-dist/tex/latex/base/size11.clo
File: size11.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/babel/babel.sty
Package: babel 2017/05/19 3.10 The Babel package

(/usr/local/texlive/2017/texmf-dist/tex/generic/babel-greek/greek.ldf
Language: greek 2016/09/07 v1.9g Greek support for the babel system

(/usr/local/texlive/2017/texmf-dist/tex/generic/babel/babel.def
File: babel.def 2017/05/19 3.10 Babel common definitions
\babel@savecnt=\count87
\U@D=\dimen103
)
\bbl@monogreek=\count88
\bbl@polygreek=\count89
\bbl@ancientgreek=\count90

(/usr/local/texlive/2017/texmf-dist/tex/latex/greek-fontenc/lgrenc.def
File: lgrenc.def 2015/12/07 v0.13.1 LGR Greek font encoding definitions

(/usr/local/texlive/2017/texmf-dist/tex/latex/greek-fontenc/greek-fontenc.def
File: greek-fontenc.def 2015/08/04 v0.13 Common Greek font encoding definitions

))
LaTeX Info: Composite with undeclared \< in encoding LGR on input line 418.
LaTeX Info: Composite with undeclared \> in encoding LGR on input line 418.
) (/usr/local/texlive/2017/texmf-dist/tex/generic/babel-english/english.ldf
Language: english 2017/01/24 v3.3q English support from the babel system
\l@canadian = a dialect from \language\l@american 
\l@australian = a dialect from \language\l@british 
\l@newzealand = a dialect from \language\l@british 
))
(/usr/local/texlive/2017/texmf-dist/tex/latex/textgreek/textgreek.sty
Package: textgreek 2011/10/09 v0.7 Greek symbols in text
Package textgreek Info: Loading the definitions for the Greek fontencoding. on 
input line 39.

(/usr/local/texlive/2017/texmf-dist/tex/latex/greek-fontenc/lgrenc.def
LGR font encoding definitions already loaded)
Package textgreek Info: Loaded fontmap: {eur/*/*}{U/eur/*/*} {phv/*/*}{U/psy/*/
*}. on input line 69.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/geometry/geometry.sty
Package: geometry 2010/09/12 v5.6 Page Geometry

(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks14
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2017/03/15 v3.2 Provides the ifpdf switch
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/ifvtex.sty
Package: ifvtex 2016/05/16 v1.6 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
\Gm@cnth=\count91
\Gm@cntv=\count92
\c@Gm@tempcnt=\count93
\Gm@bindingoffset=\dimen104
\Gm@wd@mp=\dimen105
\Gm@odd@mp=\dimen106
\Gm@even@mp=\dimen107
\Gm@layoutwidth=\dimen108
\Gm@layoutheight=\dimen109
\Gm@layouthoffset=\dimen110
\Gm@layoutvoffset=\dimen111
\Gm@dimlist=\toks15


Package geometry Warning: Over-specification in `h'-direction.
    `width' (85.35826pt) is ignored.

) (/usr/local/texlive/2017/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/10/28 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2017/04/14 v1.1b Standard LaTeX Graphics (DPC,SPQR)

(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics-cfg/graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: pdftex.def on input line 99.

(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics-def/pdftex.def
File: pdftex.def 2017/01/12 v0.06k Graphics/color for pdfTeX

(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2016/05/16 v1.4 Providing info/warning/error messages (HO)
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2016/05/16 v1.23 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count94
))
\Gin@req@height=\dimen112
\Gin@req@width=\dimen113
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2016/05/11 v2.12 LaTeX color extensions (UK)

(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics-cfg/color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package xcolor Info: Driver file: pdftex.def on input line 225.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1348.
Package xcolor Info: Model `hsb' substituted by `rgb' on input line 1352.
Package xcolor Info: Model `RGB' extended on input line 1364.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1366.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1367.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1368.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1369.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1370.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1371.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/booktabs/booktabs.sty
Package: booktabs 2016/04/27 v1.618033 publication quality tables
\heavyrulewidth=\dimen114
\lightrulewidth=\dimen115
\cmidrulewidth=\dimen116
\belowrulesep=\dimen117
\belowbottomsep=\dimen118
\aboverulesep=\dimen119
\abovetopsep=\dimen120
\cmidrulesep=\dimen121
\cmidrulekern=\dimen122
\defaultaddspace=\dimen123
\@cmidla=\count95
\@cmidlb=\count96
\@aboverulesep=\dimen124
\@belowrulesep=\dimen125
\@thisruleclass=\count97
\@lastruleclass=\count98
\@thisrulewidth=\dimen126
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tcolorbox/tcolorbox.sty
Package: tcolorbox 2017/04/25 version 4.03 text color boxes

(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/basiclayer/pgf.sty
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/utilities/pgfrcs.sty
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfutil-common.te
x
\pgfutil@everybye=\toks16
\pgfutil@tempdima=\dimen127
\pgfutil@tempdimb=\dimen128

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfutil-common-li
sts.tex))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfutil-latex.def
\pgfutil@abb=\box26
(/usr/local/texlive/2017/texmf-dist/tex/latex/ms/everyshi.sty
Package: everyshi 2001/05/15 v3.00 EveryShipout Package (MS)
))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfrcs.code.tex
Package: pgfrcs 2015/08/07 v3.0.1a (rcs-revision 1.31)
))
Package: pgf 2015/08/07 v3.0.1a (rcs-revision 1.15)
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/basiclayer/pgfcore.sty
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/systemlayer/pgfsys.sty
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/systemlayer/pgfsys.code.tex
Package: pgfsys 2014/07/09 v3.0.1a (rcs-revision 1.48)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex
\pgfkeys@pathtoks=\toks17
\pgfkeys@temptoks=\toks18

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfkeysfiltered.c
ode.tex
\pgfkeys@tmptoks=\toks19
))
\pgf@x=\dimen129
\pgf@y=\dimen130
\pgf@xa=\dimen131
\pgf@ya=\dimen132
\pgf@xb=\dimen133
\pgf@yb=\dimen134
\pgf@xc=\dimen135
\pgf@yc=\dimen136
\w@pgf@writea=\write3
\r@pgf@reada=\read1
\c@pgf@counta=\count99
\c@pgf@countb=\count100
\c@pgf@countc=\count101
\c@pgf@countd=\count102
\t@pgf@toka=\toks20
\t@pgf@tokb=\toks21
\t@pgf@tokc=\toks22

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/systemlayer/pgf.cfg
File: pgf.cfg 2008/05/14  (rcs-revision 1.7)
)
Driver file for pgf: pgfsys-pdftex.def

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-pdftex.d
ef
File: pgfsys-pdftex.def 2014/10/11  (rcs-revision 1.35)

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-common-p
df.def
File: pgfsys-common-pdf.def 2013/10/10  (rcs-revision 1.13)
)))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/systemlayer/pgfsyssoftpath.
code.tex
File: pgfsyssoftpath.code.tex 2013/09/09  (rcs-revision 1.9)
\pgfsyssoftpath@smallbuffer@items=\count103
\pgfsyssoftpath@bigbuffer@items=\count104
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/systemlayer/pgfsysprotocol.
code.tex
File: pgfsysprotocol.code.tex 2006/10/16  (rcs-revision 1.4)
))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcore.code.tex
Package: pgfcore 2010/04/11 v3.0.1a (rcs-revision 1.7)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathcalc.code.tex
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathutil.code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathparser.code.tex
\pgfmath@dimen=\dimen137
\pgfmath@count=\count105
\pgfmath@box=\box27
\pgfmath@toks=\toks23
\pgfmath@stack@operand=\toks24
\pgfmath@stack@operation=\toks25
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.code.
tex
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.basic
.code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.trigo
nometric.code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.rando
m.code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.compa
rison.code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.base.
code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.round
.code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.misc.
code.tex)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfunctions.integ
erarithmetics.code.tex)))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmathfloat.code.tex
\c@pgfmathroundto@lastzeros=\count106
))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepoints.co
de.tex
File: pgfcorepoints.code.tex 2013/10/07  (rcs-revision 1.27)
\pgf@picminx=\dimen138
\pgf@picmaxx=\dimen139
\pgf@picminy=\dimen140
\pgf@picmaxy=\dimen141
\pgf@pathminx=\dimen142
\pgf@pathmaxx=\dimen143
\pgf@pathminy=\dimen144
\pgf@pathmaxy=\dimen145
\pgf@xx=\dimen146
\pgf@xy=\dimen147
\pgf@yx=\dimen148
\pgf@yy=\dimen149
\pgf@zx=\dimen150
\pgf@zy=\dimen151
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathconst
ruct.code.tex
File: pgfcorepathconstruct.code.tex 2013/10/07  (rcs-revision 1.29)
\pgf@path@lastx=\dimen152
\pgf@path@lasty=\dimen153
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathusage
.code.tex
File: pgfcorepathusage.code.tex 2014/11/02  (rcs-revision 1.24)
\pgf@shorten@end@additional=\dimen154
\pgf@shorten@start@additional=\dimen155
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorescopes.co
de.tex
File: pgfcorescopes.code.tex 2015/05/08  (rcs-revision 1.46)
\pgfpic=\box28
\pgf@hbox=\box29
\pgf@layerbox@main=\box30
\pgf@picture@serial@count=\count107
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoregraphicst
ate.code.tex
File: pgfcoregraphicstate.code.tex 2014/11/02  (rcs-revision 1.12)
\pgflinewidth=\dimen156
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretransform
ations.code.tex
File: pgfcoretransformations.code.tex 2015/08/07  (rcs-revision 1.20)
\pgf@pt@x=\dimen157
\pgf@pt@y=\dimen158
\pgf@pt@temp=\dimen159
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorequick.cod
e.tex
File: pgfcorequick.code.tex 2008/10/09  (rcs-revision 1.3)
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreobjects.c
ode.tex
File: pgfcoreobjects.code.tex 2006/10/11  (rcs-revision 1.2)
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepathproce
ssing.code.tex
File: pgfcorepathprocessing.code.tex 2013/09/09  (rcs-revision 1.9)
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorearrows.co
de.tex
File: pgfcorearrows.code.tex 2015/05/14  (rcs-revision 1.43)
\pgfarrowsep=\dimen160
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreshade.cod
e.tex
File: pgfcoreshade.code.tex 2013/07/15  (rcs-revision 1.15)
\pgf@max=\dimen161
\pgf@sys@shading@range@num=\count108
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreimage.cod
e.tex
File: pgfcoreimage.code.tex 2013/07/15  (rcs-revision 1.18)

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoreexternal.
code.tex
File: pgfcoreexternal.code.tex 2014/07/09  (rcs-revision 1.21)
\pgfexternal@startupbox=\box31
))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorelayers.co
de.tex
File: pgfcorelayers.code.tex 2013/07/18  (rcs-revision 1.7)
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcoretranspare
ncy.code.tex
File: pgfcoretransparency.code.tex 2013/09/30  (rcs-revision 1.5)
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/basiclayer/pgfcorepatterns.
code.tex
File: pgfcorepatterns.code.tex 2013/11/07  (rcs-revision 1.5)
)))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/modules/pgfmoduleshapes.cod
e.tex
File: pgfmoduleshapes.code.tex 2014/03/21  (rcs-revision 1.35)
\pgfnodeparttextbox=\box32
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/modules/pgfmoduleplot.code.
tex
File: pgfmoduleplot.code.tex 2015/08/03  (rcs-revision 1.13)
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version
-0-65.sty
Package: pgfcomp-version-0-65 2007/07/03 v3.0.1a (rcs-revision 1.7)
\pgf@nodesepstart=\dimen162
\pgf@nodesepend=\dimen163
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/compatibility/pgfcomp-version
-1-18.sty
Package: pgfcomp-version-1-18 2007/07/23 v3.0.1a (rcs-revision 1.1)
)) (/usr/local/texlive/2017/texmf-dist/tex/latex/tools/verbatim.sty
Package: verbatim 2014/10/28 v1.5q LaTeX2e package for verbatim enhancements
\every@verbatim=\toks26
\verbatim@line=\toks27
\verbatim@in@stream=\read2
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments

(/usr/local/texlive/2017/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
)
\@envbody=\toks28
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2017/01/02 v2.4 e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count109
)
\tcb@titlebox=\box33
\tcb@upperbox=\box34
\tcb@lowerbox=\box35
\tcb@phantombox=\box36
\c@tcbbreakpart=\count110
\c@tcblayer=\count111
\tcolorbox@number=\count112
\tcb@temp=\box37
\tcb@temp=\box38
\tcb@temp=\box39
\tcb@temp=\box40
\tcb@out=\write4
\tcb@record@out=\write5
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2017/03/14 v6.85a Hypertext links for LaTeX

(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2016/05/16 v1.14 Bundle oberdiek, subset hyperref (HO)


(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2016/05/16 v1.14 Bundle oberdiek, subset generic (HO)
Package: hobsub 2016/05/16 v1.14 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package: ifluatex 2016/05/16 v1.4 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package hobsub Info: Skipping package `ifvtex' (already loaded).
Package: intcalc 2016/05/16 v1.2 Expandable calculations with integers (HO)
Package hobsub Info: Skipping package `ifpdf' (already loaded).
Package: etexcmds 2016/05/16 v1.6 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2016/05/16 v1.17 Key value parser (HO)
Package: kvdefinekeys 2016/05/16 v1.4 Define keys (HO)
Package: pdftexcmds 2017/03/19 v0.25 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2016/05/16 v1.14 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2016/05/16 v1.4 Expandable calculations on big integers (HO
)
Package: bitset 2016/05/16 v1.2 Handle bit-vector datatype (HO)
Package: uniquecounter 2016/05/16 v1.3 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2016/05/16 v1.5 Let assignment for LaTeX macros (HO)
Package: hopatch 2016/05/16 v1.3 Wrapper for package hooks (HO)
Package: xcolor-patch 2016/05/16 xcolor patch
Package: atveryend 2016/05/16 v1.9 Hooks at the very end of document (HO)
Package: atbegshi 2016/06/09 v1.18 At begin shipout hook (HO)
Package: refcount 2016/05/16 v3.5 Data extraction from label references (HO)
Package: hycolor 2016/05/16 v1.8 Color options for hyperref/bookmark (HO)
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/auxhook.sty
Package: auxhook 2016/05/16 v1.4 Hooks for auxiliary files (HO)
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2016/05/16 v3.12 Key value format for package options (HO)
)
\@linkdim=\dimen164
\Hy@linkcounter=\count113
\Hy@pagecounter=\count114

(/usr/local/texlive/2017/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2017/03/14 v6.85a Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count115

(/usr/local/texlive/2017/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `linktocpage' set `true' on input line 4374.
Package hyperref Info: Option `colorlinks' set `true' on input line 4374.
Package hyperref Info: Hyper figures OFF on input line 4498.
Package hyperref Info: Link nesting OFF on input line 4503.
Package hyperref Info: Hyper index ON on input line 4506.
Package hyperref Info: Plain pages OFF on input line 4513.
Package hyperref Info: Backreferencing OFF on input line 4518.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4751.
\c@Hy@tempcnt=\count116

(/usr/local/texlive/2017/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip10
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 5104.
\XeTeXLinkMargin=\dimen165
\Fld@menulength=\count117
\Field@Width=\dimen166
\Fld@charsize=\dimen167
Package hyperref Info: Hyper figures OFF on input line 6358.
Package hyperref Info: Link nesting OFF on input line 6363.
Package hyperref Info: Hyper index ON on input line 6366.
Package hyperref Info: backreferencing OFF on input line 6373.
Package hyperref Info: Link coloring ON on input line 6376.
Package hyperref Info: Link coloring with OCG OFF on input line 6383.
Package hyperref Info: PDF/A mode OFF on input line 6388.
LaTeX Info: Redefining \ref on input line 6428.
LaTeX Info: Redefining \pageref on input line 6432.
\Hy@abspage=\count118
\c@Item=\count119
\c@Hfootnote=\count120
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/local/texlive/2017/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2017/03/14 v6.85a Hyperref driver for pdfTeX
\Fld@listcount=\count121
\c@bookmark@seq@number=\count122

(/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2016/05/16 v1.8 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip43
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2016/11/05 v2.16a AMS math features
\@mathmargin=\skip44

For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text

(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks29
\ex@=\dimen168
))
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen169
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2016/03/08 v2.02 operator names
)
\inf@bad=\count123
LaTeX Info: Redefining \frac on input line 213.
\uproot@=\count124
\leftroot@=\count125
LaTeX Info: Redefining \overline on input line 375.
\classnum@=\count126
\DOTSCASE@=\count127
LaTeX Info: Redefining \ldots on input line 472.
LaTeX Info: Redefining \dots on input line 475.
LaTeX Info: Redefining \cdots on input line 596.
\Mathstrutbox@=\box41
\strutbox@=\box42
\big@size=\dimen170
LaTeX Font Info:    Redeclaring font encoding OML on input line 712.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 713.
\macc@depth=\count128
\c@MaxMatrixCols=\count129
\dotsspace@=\muskip11
\c@parentequation=\count130
\dspbrk@lvl=\count131
\tag@help=\toks30
\row@=\count132
\column@=\count133
\maxfields@=\count134
\andhelp@=\toks31
\eqnshift@=\dimen171
\alignsep@=\dimen172
\tagshift@=\dimen173
\tagwidth@=\dimen174
\totwidth@=\dimen175
\lineht@=\dimen176
\@envbody=\toks32
\multlinegap=\skip45
\multlinetaggap=\skip46
\mathdisplay@stack=\toks33
LaTeX Info: Redefining \[ on input line 2817.
LaTeX Info: Redefining \] on input line 2818.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/float/float.sty
Package: float 2001/11/08 v1.3d Float enhancements (AL)
\c@float@type=\count135
\float@exts=\toks34
\float@box=\box43
\@float@everytoks=\toks35
\@floatcapt=\box44
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/fancyhdr/fancyhdr.sty
Package: fancyhdr 2016/09/06 3.8 Extensive control of page headers and footers
\fancy@headwidth=\skip47
\f@ncyO@elh=\skip48
\f@ncyO@erh=\skip49
\f@ncyO@olh=\skip50
\f@ncyO@orh=\skip51
\f@ncyO@elf=\skip52
\f@ncyO@erf=\skip53
\f@ncyO@olf=\skip54
\f@ncyO@orf=\skip55
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/longtable.sty
Package: longtable 2014/10/28 v4.11 Multi-page Table package (DPC)
\LTleft=\skip56
\LTright=\skip57
\LTpre=\skip58
\LTpost=\skip59
\LTchunksize=\count136
\LTcapwidth=\dimen177
\LT@head=\box45
\LT@firsthead=\box46
\LT@foot=\box47
\LT@lastfoot=\box48
\LT@cols=\count137
\LT@rows=\count138
\c@LT@tables=\count139
\c@LT@chunks=\count140
\LT@p@ftn=\toks36
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/array.sty
Package: array 2016/10/06 v2.4d Tabular extension package (FMi)
\col@sep=\dimen178
\extrarowheight=\dimen179
\NC@list=\toks37
\extratabsurround=\skip60
\backup@length=\skip61
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/tabularx.sty
Package: tabularx 2016/02/03 v2.11 `tabularx' package (DPC)
\TX@col@width=\dimen180
\TX@old@table=\dimen181
\TX@old@col=\dimen182
\TX@target=\dimen183
\TX@delta=\dimen184
\TX@cols=\count141
\TX@ftn=\toks38
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/colortbl/colortbl.sty
Package: colortbl 2012/02/13 v1.0a Color table columns (DPC)
\everycr=\toks39
\minrowclearance=\skip62
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/caption/subcaption.sty
Package: subcaption 2016/05/22 v1.1-161 Sub-captions (AR)

(/usr/local/texlive/2017/texmf-dist/tex/latex/caption/caption.sty
Package: caption 2016/02/21 v3.3-144 Customizing captions (AR)

(/usr/local/texlive/2017/texmf-dist/tex/latex/caption/caption3.sty
Package: caption3 2016/05/22 v1.7-166 caption3 kernel (AR)
Package caption3 Info: TeX engine: e-TeX on input line 67.
\captionmargin=\dimen185
\captionmargin@=\dimen186
\captionwidth=\dimen187
\caption@tempdima=\dimen188
\caption@indent=\dimen189
\caption@parindent=\dimen190
\caption@hangindent=\dimen191
)
\c@ContinuedFloat=\count142
Package caption Info: float package is loaded.
Package caption Info: hyperref package is loaded.
Package caption Info: longtable package is loaded.

(/usr/local/texlive/2017/texmf-dist/tex/latex/caption/ltcaption.sty
Package: ltcaption 2013/06/09 v1.4-94 longtable captions (AR)
))
\c@subfigure=\count143
\c@subtable=\count144
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tocbibind/tocbibind.sty
Package: tocbibind 2010/10/13 v1.5k extra ToC listings
Package tocbibind Info: The document has section divisions on input line 50.


Package tocbibind Note: Using section or other style headings.

) (/usr/local/texlive/2017/texmf-dist/tex/latex/placeins/placeins.sty
Package: placeins 2005/04/18  v 2.2
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/algorithm2e/algorithm2e.sty
Package: algorithm2e 2013/01/06 v5.00 algorithms environments
\c@AlgoLine=\count145

(/usr/local/texlive/2017/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2014/09/29 v1.1c Standard LaTeX ifthen package (DPC)
)
\algocf@hangindent=\skip63

(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/xspace.sty
Package: xspace 2014/10/28 v1.13 Space after command names (DPC,MH)
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/relsize/relsize.sty
Package: relsize 2013/03/29 ver 4.1
)
********************************************************
Package `algorithm2e' Release 5.1 -- october 19 2015 --
- algorithm2e-announce@lirmm.fr mailing list for announcement about releases
- algorithm2e-discussion@lirmm.fr mailing list for discussion about package
subscribe by emailing sympa@lirmm.fr with 'subscribe <list> <firstname name>'
- Author: Christophe Fiorio (christophe.fiorio@umontpellier.fr)
********************************************************
\skiptotal=\skip64
\skiplinenumber=\skip65
\skiprule=\skip66
\skiphlne=\skip67
\skiptext=\skip68
\skiplength=\skip69
\algomargin=\skip70
\skipalgocfslide=\skip71
\algowidth=\dimen192
\inoutsize=\dimen193
\inoutindent=\dimen194
\interspacetitleruled=\dimen195
\interspacealgoruled=\dimen196
\interspacetitleboxruled=\dimen197
\algocf@ruledwidth=\skip72
\algocf@inoutbox=\box49
\algocf@inputbox=\box50
\AlCapSkip=\skip73
\AlCapHSkip=\skip74
\algoskipindent=\skip75
\algocf@nlbox=\box51
\algocf@hangingbox=\box52
\algocf@untilbox=\box53
\algocf@skipuntil=\skip76
\algocf@capbox=\box54
\algoheightruledefault=\skip77
\algoheightrule=\skip78
\algotitleheightruledefault=\skip79
\algotitleheightrule=\skip80
\c@algocfline=\count146
\c@algocfproc=\count147
\c@algocf=\count148
\algocf@algoframe=\box55
\algocf@algobox=\box56
) (/usr/local/texlive/2017/texmf-dist/tex/latex/footmisc/footmisc.sty
Package: footmisc 2011/06/06 v5.5b a miscellany of footnote facilities
\FN@temptoken=\toks40
\footnotemargin=\dimen198
\c@pp@next@reset=\count149
Package footmisc Info: Declaring symbol style bringhurst on input line 855.
Package footmisc Info: Declaring symbol style chicago on input line 863.
Package footmisc Info: Declaring symbol style wiley on input line 872.
Package footmisc Info: Declaring symbol style lamport-robust on input line 883.

Package footmisc Info: Declaring symbol style lamport* on input line 903.
Package footmisc Info: Declaring symbol style lamport*-robust on input line 924
.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics/rotating.sty
Package: rotating 2016/08/11 v2.16d rotated objects in LaTeX
\c@r@tfl@t=\count150
\rotFPtop=\skip81
\rotFPbot=\skip82
\rot@float@box=\box57
\rot@mess@toks=\toks41
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/amscls/amsthm.sty
Package: amsthm 2015/03/04 v2.20.2
\thm@style=\toks42
\thm@bodyfont=\toks43
\thm@headfont=\toks44
\thm@notefont=\toks45
\thm@headpunct=\toks46
\thm@preskip=\skip83
\thm@postskip=\skip84
\thm@headsep=\skip85
\dth@everypar=\toks47
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/jknapltx/mathrsfs.sty
Package: mathrsfs 1996/01/01 Math RSFS package v1.0 (jk)
\symrsfs=\mathgroup6
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/pdfpages/pdfpages.sty
Package: pdfpages 2017/01/14 v0.5h Insert pages of external PDF documents (AM)

(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2014/10/28 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count151
\calc@Bcount=\count152
\calc@Adimen=\dimen199
\calc@Bdimen=\dimen256
\calc@Askip=\skip86
\calc@Bskip=\skip87
LaTeX Info: Redefining \setlength on input line 80.
LaTeX Info: Redefining \addtolength on input line 81.
\calc@Ccount=\count153
\calc@Cskip=\skip88
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/eso-pic/eso-pic.sty
Package: eso-pic 2015/07/21 v2.0g eso-pic (RN)
)
\AM@pagewidth=\dimen257
\AM@pageheight=\dimen258

(/usr/local/texlive/2017/texmf-dist/tex/latex/pdfpages/pppdftex.def
File: pppdftex.def 2017/01/14 v0.5h Pdfpages driver for pdfTeX (AM)
)
\AM@pagebox=\box58
\AM@global@opts=\toks48
\AM@toc@title=\toks49
\c@AM@survey=\count154
\AM@templatesizebox=\box59
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/pdflscape.sty
Package: pdflscape 2016/05/14 v0.11 Display of landscape pages in PDF (HO)

(/usr/local/texlive/2017/texmf-dist/tex/latex/graphics/lscape.sty
Package: lscape 2000/10/22 v3.01 Landscape Pages (DPC)
)
Package pdflscape Info: Auto-detected driver: pdftex on input line 81.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/multicol.sty
Package: multicol 2017/04/11 v1.8q multicolumn formatting (FMi)
\c@tracingmulticols=\count155
\mult@box=\box60
\multicol@leftmargin=\dimen259
\c@unbalance=\count156
\c@collectmore=\count157
\doublecol@number=\count158
\multicoltolerance=\count159
\multicolpretolerance=\count160
\full@width=\dimen260
\page@free=\dimen261
\premulticols=\dimen262
\postmulticols=\dimen263
\multicolsep=\skip89
\multicolbaselineskip=\skip90
\partial@page=\box61
\last@line=\box62
\maxbalancingoverflow=\dimen264
\mult@rightbox=\box63
\mult@grightbox=\box64
\mult@gfirstbox=\box65
\mult@firstbox=\box66
\@tempa=\box67
\@tempa=\box68
\@tempa=\box69
\@tempa=\box70
\@tempa=\box71
\@tempa=\box72
\@tempa=\box73
\@tempa=\box74
\@tempa=\box75
\@tempa=\box76
\@tempa=\box77
\@tempa=\box78
\@tempa=\box79
\@tempa=\box80
\@tempa=\box81
\@tempa=\box82
\@tempa=\box83
\c@columnbadness=\count161
\c@finalcolumnbadness=\count162
\last@try=\dimen265
\multicolovershoot=\dimen266
\multicolundershoot=\dimen267
\mult@nat@firstbox=\box84
\colbreak@box=\box85
\mc@col@check@num=\count163
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/makecell/makecell.sty
Package: makecell 2009/08/03 V0.1e Managing of Tab Column Heads and Cells
\rotheadsize=\dimen268
\c@nlinenum=\count164
\TeXr@lab=\toks50
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/algorithmicx/algpseudocode.sty
Package: algpseudocode 

(/usr/local/texlive/2017/texmf-dist/tex/latex/algorithmicx/algorithmicx.sty
Package: algorithmicx 2005/04/27 v1.2 Algorithmicx

Document Style algorithmicx 1.2 - a greatly improved `algorithmic' style
\c@ALG@line=\count165
\c@ALG@rem=\count166
\c@ALG@nested=\count167
\ALG@tlm=\skip91
\ALG@thistlm=\skip92
\c@ALG@Lnr=\count168
\c@ALG@blocknr=\count169
\c@ALG@storecount=\count170
\c@ALG@tmpcounter=\count171
\ALG@tmplength=\skip93
)
Document Style - pseudocode environments for use with the `algorithmicx' style
) (/usr/local/texlive/2017/texmf-dist/tex/latex/appendix/appendix.sty
Package: appendix 2009/09/02 v1.2b extra appendix facilities
\c@@pps=\count172
\c@@ppsavesec=\count173
\c@@ppsaveapp=\count174
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tabu/tabu.sty
Package: tabu 2011/02/26 v2.8 - flexible LaTeX tabulars (FC)

(/usr/local/texlive/2017/texmf-dist/tex/latex/varwidth/varwidth.sty
Package: varwidth 2009/03/30 ver 0.92;  Variable-width minipages
\@vwid@box=\box86
\sift@deathcycles=\count175
\@vwid@loff=\dimen269
\@vwid@roff=\dimen270
)
\c@taburow=\count176
\tabu@nbcols=\count177
\tabu@cnt=\count178
\tabu@Xcol=\count179
\tabu@alloc=\count180
\tabu@nested=\count181
\tabu@target=\dimen271
\tabu@spreadtarget=\dimen272
\tabu@naturalX=\dimen273
\tabucolX=\dimen274
\tabu@Xsum=\dimen275
\extrarowdepth=\dimen276
\abovetabulinesep=\dimen277
\belowtabulinesep=\dimen278
\tabustrutrule=\dimen279
\tabu@thebody=\toks51
\tabu@footnotes=\toks52
\tabu@box=\box87
\tabu@arstrutbox=\box88
\tabu@hleads=\box89
\tabu@vleads=\box90
\tabu@cellskip=\skip94
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tcolorbox/tcbbreakable.code.tex
Library (tcolorbox): 'tcbbreakable.code.tex' version '4.03'
\tcb@testbox=\box91
\tcb@totalupperbox=\box92
\tcb@totallowerbox=\box93
) (/usr/local/texlive/2017/texmf-dist/tex/latex/titlesec/titlesec.sty
Package: titlesec 2016/03/21 v2.10.2 Sectioning titles
\ttl@box=\box94
\beforetitleunit=\skip95
\aftertitleunit=\skip96
\ttl@plus=\dimen280
\ttl@minus=\dimen281
\ttl@toksa=\toks53
\titlewidth=\dimen282
\titlewidthlast=\dimen283
\titlewidthfirst=\dimen284
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/cleveref/cleveref.sty
Package: cleveref 2013/12/28 v0.19 Intelligent cross-referencing
Package cleveref Info: `hyperref' support loaded on input line 2230.
LaTeX Info: Redefining \cref on input line 2230.
LaTeX Info: Redefining \Cref on input line 2230.
LaTeX Info: Redefining \crefrange on input line 2230.
LaTeX Info: Redefining \Crefrange on input line 2230.
LaTeX Info: Redefining \cpageref on input line 2230.
LaTeX Info: Redefining \Cpageref on input line 2230.
LaTeX Info: Redefining \cpagerefrange on input line 2230.
LaTeX Info: Redefining \Cpagerefrange on input line 2230.
LaTeX Info: Redefining \labelcref on input line 2230.
LaTeX Info: Redefining \labelcpageref on input line 2230.
Package cleveref Info: `amsthm' support loaded on input line 2858.
Package cleveref Info: `algorithmicx' support loaded on input line 2939.
Package cleveref Info: `algorithm2e' support loaded on input line 2966.
Package cleveref Info: always capitalise cross-reference names on input line 74
70.
Package cleveref Info: always capitalise cross-reference names on input line 74
93.
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/svg/svg.sty
Package: svg 2017/03/28 v2.00a (include SVG pictures)

(/usr/local/texlive/2017/texmf-dist/tex/latex/koma-script/scrbase.sty
Package: scrbase 2017/04/13 v3.23 KOMA-Script package (KOMA-Script-independent 
basics and keyval usage)

(/usr/local/texlive/2017/texmf-dist/tex/latex/koma-script/scrlfile.sty
Package: scrlfile 2017/04/13 v3.23 KOMA-Script package (loading files)

Package scrlfile, 2017/04/13 v3.23 KOMA-Script package (loading files)
                  Copyright (C) Markus Kohm

)) (/usr/local/texlive/2017/texmf-dist/tex/latex/tools/shellesc.sty
Package: shellesc 2016/06/07 v0.02a unified shell escape interface for LaTeX
Package shellesc Info: Restricted shell escape enabled on input line 69.
)
\c@svg@param@lastpage=\count182
\c@svg@param@currpage=\count183
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/transparent.sty
Package: transparent 2016/05/16 v1.1 Transparency via pdfTeX's color stack (HO)

)
(/usr/local/texlive/2017/texmf-dist/tex/latex/xargs/xargs.sty
Package: xargs 2008/03/22 v1.1  extended macro definitions  (mpg)

(/usr/local/texlive/2017/texmf-dist/tex/latex/xkeyval/xkeyval.sty
Package: xkeyval 2014/12/03 v2.7a package option processing (HA)

(/usr/local/texlive/2017/texmf-dist/tex/generic/xkeyval/xkeyval.tex
(/usr/local/texlive/2017/texmf-dist/tex/generic/xkeyval/xkvutils.tex
\XKV@toks=\toks54
\XKV@tempa@toks=\toks55
)
\XKV@depth=\count184
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
))
\xargs@max=\count185
\xargs@toksa=\toks56
\xargs@toksb=\toks57
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/todonotes/todonotes.sty
Package: todonotes 2015/07/09 .dtx Todonotes source and documentation.
Package: todonotes 2012/07/25

(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/frontendlayer/tikz.sty
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/utilities/pgffor.sty
(/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/utilities/pgfkeys.sty
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgfkeys.code.tex)
) (/usr/local/texlive/2017/texmf-dist/tex/latex/pgf/math/pgfmath.sty
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/utilities/pgffor.code.tex
Package: pgffor 2013/12/13 v3.0.1a (rcs-revision 1.25)

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/math/pgfmath.code.tex)
\pgffor@iter=\dimen285
\pgffor@skip=\dimen286
\pgffor@stack=\toks58
\pgffor@toks=\toks59
))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/frontendlayer/tikz/tikz.cod
e.tex
Package: tikz 2015/08/07 v3.0.1a (rcs-revision 1.151)

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/libraries/pgflibraryplothan
dlers.code.tex
File: pgflibraryplothandlers.code.tex 2013/08/31 v3.0.1a (rcs-revision 1.20)
\pgf@plot@mark@count=\count186
\pgfplotmarksize=\dimen287
)
\tikz@lastx=\dimen288
\tikz@lasty=\dimen289
\tikz@lastxsaved=\dimen290
\tikz@lastysaved=\dimen291
\tikzleveldistance=\dimen292
\tikzsiblingdistance=\dimen293
\tikz@figbox=\box95
\tikz@figbox@bg=\box96
\tikz@tempbox=\box97
\tikz@tempbox@bg=\box98
\tikztreelevel=\count187
\tikznumberofchildren=\count188
\tikznumberofcurrentchild=\count189
\tikz@fig@count=\count190

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/modules/pgfmodulematrix.cod
e.tex
File: pgfmodulematrix.code.tex 2013/09/17  (rcs-revision 1.8)
\pgfmatrixcurrentrow=\count191
\pgfmatrixcurrentcolumn=\count192
\pgf@matrix@numberofcolumns=\count193
)
\tikz@expandcount=\count194

(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibrarytopaths.code.tex
File: tikzlibrarytopaths.code.tex 2008/06/17 v3.0.1a (rcs-revision 1.2)
)))
(/usr/local/texlive/2017/texmf-dist/tex/generic/pgf/frontendlayer/tikz/librarie
s/tikzlibrarypositioning.code.tex
File: tikzlibrarypositioning.code.tex 2008/10/06 v3.0.1a (rcs-revision 1.7)
)
\c@@todonotes@numberoftodonotes=\count195
)
\c@thm=\count196

(/usr/local/texlive/2017/texmf-dist/tex/latex/listings/listings.sty
\lst@mode=\count197
\lst@gtempboxa=\box99
\lst@token=\toks60
\lst@length=\count198
\lst@currlwidth=\dimen294
\lst@column=\count199
\lst@pos=\count266
\lst@lostspace=\dimen295
\lst@width=\dimen296
\lst@newlines=\count267
\lst@lineno=\count268
\lst@maxwidth=\dimen297

(/usr/local/texlive/2017/texmf-dist/tex/latex/listings/lstmisc.sty
File: lstmisc.sty 2015/06/04 1.6 (Carsten Heinz)
\c@lstnumber=\count269
\lst@skipnumbers=\count270
\lst@framebox=\box100
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/listings/listings.cfg
File: listings.cfg 2015/06/04 1.6 listings configuration
))
Package: listings 2015/06/04 1.6 (Carsten Heinz)

(/usr/local/texlive/2017/texmf-dist/tex/latex/blindtext/blindtext.sty
Package: blindtext 2012/01/06 V2.0 blindtext-Package
\c@blindtext=\count271
\c@Blindtext=\count272
\c@blind@countparstart=\count273
\blind@countxx=\count274
\blindtext@numBlindtext=\count275
\blind@countyy=\count276
\c@blindlist=\count277
\c@blindlistlevel=\count278
\c@blindlist@level=\count279
\blind@listitem=\count280
\c@blind@listcount=\count281
\c@blind@levelcount=\count282
\blind@mathformula=\count283
\blind@Mathformula=\count284
\c@blind@randomcount=\count285
\c@blind@randommax=\count286
\c@blind@pangramcount=\count287
\c@blind@pangrammax=\count288
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/acronym/acronym.sty
Package: acronym 2015/03/21 v1.41 Support for acronyms (Tobias Oetiker)

(/usr/local/texlive/2017/texmf-dist/tex/latex/bigfoot/suffix.sty
Package: suffix 2006/07/15 1.5a Variant command support
)
(/usr/local/texlive/2017/texmf-dist/tex/generic/xstring/xstring.sty
(/usr/local/texlive/2017/texmf-dist/tex/generic/xstring/xstring.tex
\@xs@message=\write6
\integerpart=\count289
\decimalpart=\count290
)
Package: xstring 2013/10/13  v1.7c  String manipulations (C Tellechea)
)
\AC@clearlist=\toks61
)
(./the2.aux)
\openout1 = `the2.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 186.
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 186.
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 186.
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 186.
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 186.
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 186.
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for LGR/cmr/m/n on input line 186.
LaTeX Font Info:    Try loading font information for LGR+cmr on input line 186.

 (/usr/local/texlive/2017/texmf-dist/tex/latex/cbfonts-fd/lgrcmr.fd
File: lgrcmr.fd 2016/03/04 v1.1 Greek European Computer Regular
)
LaTeX Font Info:    ... okay on input line 186.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 186.
LaTeX Font Info:    ... okay on input line 186.

*geometry* driver: auto-detecting
*geometry* detected driver: pdftex
*geometry* verbose mode - [ preamble ] result:
* driver: pdftex
* paper: a4paper
* layout: <same size as paper>
* layoutoffset:(h,v)=(0.0pt,0.0pt)
* modes: 
* h-part:(L,W,R)=(34.14322pt, 529.22144pt, 34.14322pt)
* v-part:(T,H,B)=(51.21504pt, 736.9263pt, 56.9055pt)
* \paperwidth=597.50787pt
* \paperheight=845.04684pt
* \textwidth=426.79134pt
* \textheight=625.96062pt
* \oddsidemargin=15.6491pt
* \evensidemargin=0.0pt
* \topmargin=2.84544pt
* \headheight=14.0pt
* \headsep=28.45274pt
* \topskip=11.0pt
* \footskip=30.0pt
* \marginparwidth=50.0pt
* \marginparsep=10.0pt
* \columnsep=28.45274pt
* \skip\footins=10.0pt plus 4.0pt minus 2.0pt
* \hoffset=0.0pt
* \voffset=0.0pt
* \mag=1000
* \@twocolumnfalse
* \@twosidefalse
* \@mparswitchfalse
* \@reversemarginfalse
* (1in=72.27pt=25.4mm, 1cm=28.453pt)

(/usr/local/texlive/2017/texmf-dist/tex/context/base/mkii/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count291
\scratchdimen=\dimen298
\scratchbox=\box101
\nofMPsegments=\count292
\nofMParguments=\count293
\everyMPshowfont=\toks62
\MPscratchCnt=\count294
\MPscratchDim=\dimen299
\MPnumerator=\count295
\makeMPintoPDFobject=\count296
\everyMPtoPDFconversion=\toks63
) (/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2016/05/15 v2.6 Base part for package epstopdf

(/usr/local/texlive/2017/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2016/05/16 v1.2 Manage graphics extensions (HO)
)
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 4
38.
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 456.

(/usr/local/texlive/2017/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
ABD: EveryShipout initializing macros
\AtBeginShipoutBox=\box102
Package hyperref Info: Link coloring ON on input line 186.

(/usr/local/texlive/2017/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2016/05/21 v2.44 Cross-referencing by name of section

(/usr/local/texlive/2017/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2016/05/16 v1.5 Cleanup title references (HO)
)
\c@section@level=\count297
)
LaTeX Info: Redefining \ref on input line 186.
LaTeX Info: Redefining \pageref on input line 186.
LaTeX Info: Redefining \nameref on input line 186.

(./the2.out
! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.31 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \def doesn't match its definition.
l.32 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.32 ...ssignment \let \protect \@@protect \edef P
                                                  rice Reconstruction{[1][-]...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.32 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \def doesn't match its definition.
l.33 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.33 ...ssignment \let \protect \@@protect \edef P
                                                  rice Reconstruction{[1][-]...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.33 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \def doesn't match its definition.
l.34 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.34 ...ssignment \let \protect \@@protect \edef P
                                                  rice Reconstruction{[1][-]...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.34 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \def doesn't match its definition.
l.35 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.35 ...ssignment \let \protect \@@protect \edef P
                                                  rice Reconstruction{[1][-]...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.35 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \def doesn't match its definition.
l.36 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.36 ...ssignment \let \protect \@@protect \edef P
                                                  rice Reconstruction{[1][-]...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.36 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \def doesn't match its definition.
l.37 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.37 ...ssignment \let \protect \@@protect \edef P
                                                  rice Reconstruction{[1][-]...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.37 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

)
! Extra }, or forgotten \endgroup.
\reserved@a ... \@filef@und \scr@load@hook {after}
                                                  {\jobname .out}
l.186 \begin{document}
                      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Use of \def doesn't match its definition.
<argument> ...okmarks \relax \fi \def \@@BOOKMARK 
                                                  [##1][##2]##3##4##5{\def \...
l.186 \begin{document}
                      
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! You can't use `macro parameter character #' in horizontal mode.
<argument> ...arks \relax \fi \def \@@BOOKMARK [##
                                                  1][##2]##3##4##5{\def \Hy@...
l.186 \begin{document}
                      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
<argument> ...\relax \fi \def \@@BOOKMARK [##1][##
                                                  2]##3##4##5{\def \Hy@temp ...
l.186 \begin{document}
                      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
<argument> ...ax \fi \def \@@BOOKMARK [##1][##2]##
                                                  3##4##5{\def \Hy@temp {##4...
l.186 \begin{document}
                      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
<argument> ...\fi \def \@@BOOKMARK [##1][##2]##3##
                                                  4##5{\def \Hy@temp {##4}\H...
l.186 \begin{document}
                      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
<argument> ... \def \@@BOOKMARK [##1][##2]##3##4##
                                                  5{\def \Hy@temp {##4}\Hy@p...
l.186 \begin{document}
                      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Use of \def doesn't match its definition.
<argument> ...K [##1][##2]##3##4##5{\def \Hy@temp 
                                                  {##4}\Hy@pstringdef \Hy@ps...
l.186 \begin{document}
                      
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! You can't use `macro parameter character #' in horizontal mode.
<argument> ...##1][##2]##3##4##5{\def \Hy@temp {##
                                                  4}\Hy@pstringdef \Hy@pstri...
l.186 \begin{document}
                      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing number, treated as zero.
<to be read again> 
                   ##
l.186 \begin{document}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing { inserted.
<to be read again> 
                   ##
l.186 \begin{document}
                      
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! Use of \def doesn't match its definition.
<argument> ... }}\begingroup \def \WriteBookmarks 
                                                  {0}\InputIfFileExists {\jo...
l.186 \begin{document}
                      
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\IfFileExists ...@filef@und {#1 }\def \reserved@a 
                                                  {#2}\fi \reserved@a 
l.186 \begin{document}
                      
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

(./the2.out
! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.1 \BOOKMARK
              [1][-]{Doc-Start}{List of Figures}{}% 1
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.1 \BOOKMARK
              [1][-]{Doc-Start}{List of Figures}{}% 1
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.1 \BOOKMARK
              [1][-]{Doc-Start}{List of Figures}{}% 1
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.1 \BOOKMARK
              [1][-]{Doc-Start}{List of Figures}{}% 1
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.1 \BOOKMARK
              [1][-]{Doc-Start}{List of Figures}{}% 1
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (79.82935pt too wide) in paragraph at lines 32--1
[]\OT1/cmr/m/n/10.95 [=[rice Reconstruction[1][-][=[rice Reconstruction[1][-][=
[rice Reconstruction[1][-][=[rice Reconstruction[1][-
 []


Overfull \hbox (12.12178pt too wide) in paragraph at lines 32--1
\OT1/cmr/m/n/10.95 ][=[rice Reconstruction[1][-][=[rice Reconstruction[1][-]aft
erthe2.out[1][2]34540beforethe2.out 
 []

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.2 \BOOKMARK
              [1][-]{Doc-Start}{List of Tables}{}% 2
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.2 \BOOKMARK
              [1][-]{Doc-Start}{List of Tables}{}% 2
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.2 \BOOKMARK
              [1][-]{Doc-Start}{List of Tables}{}% 2
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.2 \BOOKMARK
              [1][-]{Doc-Start}{List of Tables}{}% 2
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.2 \BOOKMARK
              [1][-]{Doc-Start}{List of Tables}{}% 2
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.3 \BOOKMARK
              [1][-]{section.1}{Introduction}{}% 3
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.3 \BOOKMARK
              [1][-]{section.1}{Introduction}{}% 3
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.3 \BOOKMARK
              [1][-]{section.1}{Introduction}{}% 3
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.3 \BOOKMARK
              [1][-]{section.1}{Introduction}{}% 3
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.3 \BOOKMARK
              [1][-]{section.1}{Introduction}{}% 3
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.4 \BOOKMARK
              [1][-]{section.2}{Literature Review}{}% 4
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.4 \BOOKMARK
              [1][-]{section.2}{Literature Review}{}% 4
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.4 \BOOKMARK
              [1][-]{section.2}{Literature Review}{}% 4
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.4 \BOOKMARK
              [1][-]{section.2}{Literature Review}{}% 4
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.4 \BOOKMARK
              [1][-]{section.2}{Literature Review}{}% 4
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.5 \BOOKMARK
              [2][-]{subsection.2.1}{Technical Analysis}{section.2}% 5
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.5 \BOOKMARK
              [2][-]{subsection.2.1}{Technical Analysis}{section.2}% 5
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.5 \BOOKMARK
              [2][-]{subsection.2.1}{Technical Analysis}{section.2}% 5
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.5 \BOOKMARK
              [2][-]{subsection.2.1}{Technical Analysis}{section.2}% 5
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.5 \BOOKMARK
              [2][-]{subsection.2.1}{Technical Analysis}{section.2}% 5
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.6 \BOOKMARK
              [2][-]{subsection.2.2}{Neural Networks}{section.2}% 6
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.6 \BOOKMARK
              [2][-]{subsection.2.2}{Neural Networks}{section.2}% 6
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.6 \BOOKMARK
              [2][-]{subsection.2.2}{Neural Networks}{section.2}% 6
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.6 \BOOKMARK
              [2][-]{subsection.2.2}{Neural Networks}{section.2}% 6
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.6 \BOOKMARK
              [2][-]{subsection.2.2}{Neural Networks}{section.2}% 6
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.7 \BOOKMARK
              [3][-]{subsubsection.2.2.1}{Training and Backpropagation}{subs...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.7 \BOOKMARK
              [3][-]{subsubsection.2.2.1}{Training and Backpropagation}{subs...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.7 \BOOKMARK
              [3][-]{subsubsection.2.2.1}{Training and Backpropagation}{subs...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.7 \BOOKMARK
              [3][-]{subsubsection.2.2.1}{Training and Backpropagation}{subs...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.7 \BOOKMARK
              [3][-]{subsubsection.2.2.1}{Training and Backpropagation}{subs...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.8 \BOOKMARK
              [3][-]{subsubsection.2.2.2}{Activation Functions}{subsection.2...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.8 \BOOKMARK
              [3][-]{subsubsection.2.2.2}{Activation Functions}{subsection.2...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.8 \BOOKMARK
              [3][-]{subsubsection.2.2.2}{Activation Functions}{subsection.2...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.8 \BOOKMARK
              [3][-]{subsubsection.2.2.2}{Activation Functions}{subsection.2...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.8 \BOOKMARK
              [3][-]{subsubsection.2.2.2}{Activation Functions}{subsection.2...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.9 \BOOKMARK
              [3][-]{subsubsection.2.2.3}{Deep Learning}{subsection.2.2}% 9
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.9 \BOOKMARK
              [3][-]{subsubsection.2.2.3}{Deep Learning}{subsection.2.2}% 9
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.9 \BOOKMARK
              [3][-]{subsubsection.2.2.3}{Deep Learning}{subsection.2.2}% 9
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.9 \BOOKMARK
              [3][-]{subsubsection.2.2.3}{Deep Learning}{subsection.2.2}% 9
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.9 \BOOKMARK
              [3][-]{subsubsection.2.2.3}{Deep Learning}{subsection.2.2}% 9
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.10 \BOOKMARK
               [3][-]{subsubsection.2.2.4}{Weight Initialization Improvement...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.10 \BOOKMARK
               [3][-]{subsubsection.2.2.4}{Weight Initialization Improvement...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.10 \BOOKMARK
               [3][-]{subsubsection.2.2.4}{Weight Initialization Improvement...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.10 \BOOKMARK
               [3][-]{subsubsection.2.2.4}{Weight Initialization Improvement...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.10 \BOOKMARK
               [3][-]{subsubsection.2.2.4}{Weight Initialization Improvement...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.11 \BOOKMARK
               [2][-]{subsection.2.3}{Stacked AutoEncoders}{section.2}% 11
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.11 \BOOKMARK
               [2][-]{subsection.2.3}{Stacked AutoEncoders}{section.2}% 11
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.11 \BOOKMARK
               [2][-]{subsection.2.3}{Stacked AutoEncoders}{section.2}% 11
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.11 \BOOKMARK
               [2][-]{subsection.2.3}{Stacked AutoEncoders}{section.2}% 11
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.11 \BOOKMARK
               [2][-]{subsection.2.3}{Stacked AutoEncoders}{section.2}% 11
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.12 \BOOKMARK
               [3][-]{subsubsection.2.3.1}{High Dimensional Data Reduction}{...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.12 \BOOKMARK
               [3][-]{subsubsection.2.3.1}{High Dimensional Data Reduction}{...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.12 \BOOKMARK
               [3][-]{subsubsection.2.3.1}{High Dimensional Data Reduction}{...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.12 \BOOKMARK
               [3][-]{subsubsection.2.3.1}{High Dimensional Data Reduction}{...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.12 \BOOKMARK
               [3][-]{subsubsection.2.3.1}{High Dimensional Data Reduction}{...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.13 \BOOKMARK
               [3][-]{subsubsection.2.3.2}{Deep Belief Networks}{subsection....
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.13 \BOOKMARK
               [3][-]{subsubsection.2.3.2}{Deep Belief Networks}{subsection....
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.13 \BOOKMARK
               [3][-]{subsubsection.2.3.2}{Deep Belief Networks}{subsection....
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.13 \BOOKMARK
               [3][-]{subsubsection.2.3.2}{Deep Belief Networks}{subsection....
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.13 \BOOKMARK
               [3][-]{subsubsection.2.3.2}{Deep Belief Networks}{subsection....
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.14 \BOOKMARK
               [3][-]{subsubsection.2.3.3}{Stacked Denoising AutoEncoders}{s...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.14 \BOOKMARK
               [3][-]{subsubsection.2.3.3}{Stacked Denoising AutoEncoders}{s...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.14 \BOOKMARK
               [3][-]{subsubsection.2.3.3}{Stacked Denoising AutoEncoders}{s...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.14 \BOOKMARK
               [3][-]{subsubsection.2.3.3}{Stacked Denoising AutoEncoders}{s...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.14 \BOOKMARK
               [3][-]{subsubsection.2.3.3}{Stacked Denoising AutoEncoders}{s...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.15 \BOOKMARK
               [3][-]{subsubsection.2.3.4}{Pre-training}{subsection.2.3}% 15
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.15 \BOOKMARK
               [3][-]{subsubsection.2.3.4}{Pre-training}{subsection.2.3}% 15
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.15 \BOOKMARK
               [3][-]{subsubsection.2.3.4}{Pre-training}{subsection.2.3}% 15
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.15 \BOOKMARK
               [3][-]{subsubsection.2.3.4}{Pre-training}{subsection.2.3}% 15
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.15 \BOOKMARK
               [3][-]{subsubsection.2.3.4}{Pre-training}{subsection.2.3}% 15
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.16 \BOOKMARK
               [3][-]{subsubsection.2.3.5}{Time Series Applications}{subsect...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.16 \BOOKMARK
               [3][-]{subsubsection.2.3.5}{Time Series Applications}{subsect...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.16 \BOOKMARK
               [3][-]{subsubsection.2.3.5}{Time Series Applications}{subsect...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.16 \BOOKMARK
               [3][-]{subsubsection.2.3.5}{Time Series Applications}{subsect...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.16 \BOOKMARK
               [3][-]{subsubsection.2.3.5}{Time Series Applications}{subsect...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.17 \BOOKMARK
               [3][-]{subsubsection.2.3.6}{Financial Applications}{subsectio...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.17 \BOOKMARK
               [3][-]{subsubsection.2.3.6}{Financial Applications}{subsectio...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.17 \BOOKMARK
               [3][-]{subsubsection.2.3.6}{Financial Applications}{subsectio...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.17 \BOOKMARK
               [3][-]{subsubsection.2.3.6}{Financial Applications}{subsectio...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.17 \BOOKMARK
               [3][-]{subsubsection.2.3.6}{Financial Applications}{subsectio...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.18 \BOOKMARK
               [2][-]{subsection.2.4}{Online Learning Algorithms and Gradien...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.18 \BOOKMARK
               [2][-]{subsection.2.4}{Online Learning Algorithms and Gradien...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.18 \BOOKMARK
               [2][-]{subsection.2.4}{Online Learning Algorithms and Gradien...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.18 \BOOKMARK
               [2][-]{subsection.2.4}{Online Learning Algorithms and Gradien...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.18 \BOOKMARK
               [2][-]{subsection.2.4}{Online Learning Algorithms and Gradien...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.19 \BOOKMARK
               [2][-]{subsection.2.5}{Gradient Learning Improvements}{sectio...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.19 \BOOKMARK
               [2][-]{subsection.2.5}{Gradient Learning Improvements}{sectio...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.19 \BOOKMARK
               [2][-]{subsection.2.5}{Gradient Learning Improvements}{sectio...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.19 \BOOKMARK
               [2][-]{subsection.2.5}{Gradient Learning Improvements}{sectio...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.19 \BOOKMARK
               [2][-]{subsection.2.5}{Gradient Learning Improvements}{sectio...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.20 \BOOKMARK
               [3][-]{subsubsection.2.5.1}{Gradient Adjustments and Regulari...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.20 \BOOKMARK
               [3][-]{subsubsection.2.5.1}{Gradient Adjustments and Regulari...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.20 \BOOKMARK
               [3][-]{subsubsection.2.5.1}{Gradient Adjustments and Regulari...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.20 \BOOKMARK
               [3][-]{subsubsection.2.5.1}{Gradient Adjustments and Regulari...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.20 \BOOKMARK
               [3][-]{subsubsection.2.5.1}{Gradient Adjustments and Regulari...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.21 \BOOKMARK
               [3][-]{subsubsection.2.5.2}{Dropout}{subsection.2.5}% 21
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.21 \BOOKMARK
               [3][-]{subsubsection.2.5.2}{Dropout}{subsection.2.5}% 21
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.21 \BOOKMARK
               [3][-]{subsubsection.2.5.2}{Dropout}{subsection.2.5}% 21
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.21 \BOOKMARK
               [3][-]{subsubsection.2.5.2}{Dropout}{subsection.2.5}% 21
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.21 \BOOKMARK
               [3][-]{subsubsection.2.5.2}{Dropout}{subsection.2.5}% 21
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.22 \BOOKMARK
               [3][-]{subsubsection.2.5.3}{Learning Rate Schedules}{subsecti...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.22 \BOOKMARK
               [3][-]{subsubsection.2.5.3}{Learning Rate Schedules}{subsecti...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.22 \BOOKMARK
               [3][-]{subsubsection.2.5.3}{Learning Rate Schedules}{subsecti...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.22 \BOOKMARK
               [3][-]{subsubsection.2.5.3}{Learning Rate Schedules}{subsecti...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.22 \BOOKMARK
               [3][-]{subsubsection.2.5.3}{Learning Rate Schedules}{subsecti...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.23 \BOOKMARK
               [2][-]{subsection.2.6}{Backtesting and Model Validation}{sect...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.23 \BOOKMARK
               [2][-]{subsection.2.6}{Backtesting and Model Validation}{sect...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.23 \BOOKMARK
               [2][-]{subsection.2.6}{Backtesting and Model Validation}{sect...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.23 \BOOKMARK
               [2][-]{subsection.2.6}{Backtesting and Model Validation}{sect...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.23 \BOOKMARK
               [2][-]{subsection.2.6}{Backtesting and Model Validation}{sect...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.24 \BOOKMARK
               [3][-]{subsubsection.2.6.1}{Sharpe Ratio Assessment Methodolo...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.24 \BOOKMARK
               [3][-]{subsubsection.2.6.1}{Sharpe Ratio Assessment Methodolo...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.24 \BOOKMARK
               [3][-]{subsubsection.2.6.1}{Sharpe Ratio Assessment Methodolo...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.24 \BOOKMARK
               [3][-]{subsubsection.2.6.1}{Sharpe Ratio Assessment Methodolo...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.24 \BOOKMARK
               [3][-]{subsubsection.2.6.1}{Sharpe Ratio Assessment Methodolo...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.25 \BOOKMARK
               [3][-]{subsubsection.2.6.2}{Generalised Assessment Methodolog...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.25 \BOOKMARK
               [3][-]{subsubsection.2.6.2}{Generalised Assessment Methodolog...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.25 \BOOKMARK
               [3][-]{subsubsection.2.6.2}{Generalised Assessment Methodolog...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.25 \BOOKMARK
               [3][-]{subsubsection.2.6.2}{Generalised Assessment Methodolog...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.25 \BOOKMARK
               [3][-]{subsubsection.2.6.2}{Generalised Assessment Methodolog...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.26 \BOOKMARK
               [3][-]{subsubsection.2.6.3}{Test Data Length}{subsection.2.6}...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.26 \BOOKMARK
               [3][-]{subsubsection.2.6.3}{Test Data Length}{subsection.2.6}...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.26 \BOOKMARK
               [3][-]{subsubsection.2.6.3}{Test Data Length}{subsection.2.6}...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.26 \BOOKMARK
               [3][-]{subsubsection.2.6.3}{Test Data Length}{subsection.2.6}...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.26 \BOOKMARK
               [3][-]{subsubsection.2.6.3}{Test Data Length}{subsection.2.6}...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.27 \BOOKMARK
               [1][-]{section.3}{Data Processing and Generation }{}% 27
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.27 \BOOKMARK
               [1][-]{section.3}{Data Processing and Generation }{}% 27
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.27 \BOOKMARK
               [1][-]{section.3}{Data Processing and Generation }{}% 27
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.27 \BOOKMARK
               [1][-]{section.3}{Data Processing and Generation }{}% 27
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.27 \BOOKMARK
               [1][-]{section.3}{Data Processing and Generation }{}% 27
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.28 \BOOKMARK
               [2][-]{subsection.3.1}{Data Processing}{section.3}% 28
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.28 \BOOKMARK
               [2][-]{subsection.3.1}{Data Processing}{section.3}% 28
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.28 \BOOKMARK
               [2][-]{subsection.3.1}{Data Processing}{section.3}% 28
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.28 \BOOKMARK
               [2][-]{subsection.3.1}{Data Processing}{section.3}% 28
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.28 \BOOKMARK
               [2][-]{subsection.3.1}{Data Processing}{section.3}% 28
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.29 \BOOKMARK
               [3][-]{subsubsection.3.1.1}{Log Difference Transformation and...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.29 \BOOKMARK
               [3][-]{subsubsection.3.1.1}{Log Difference Transformation and...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.29 \BOOKMARK
               [3][-]{subsubsection.3.1.1}{Log Difference Transformation and...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.29 \BOOKMARK
               [3][-]{subsubsection.3.1.1}{Log Difference Transformation and...
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.29 \BOOKMARK
               [3][-]{subsubsection.3.1.1}{Log Difference Transformation and...
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
\@ifnextchar ...t \reserved@d =#1\def \reserved@a 
                                                  {#2}\def \reserved@b {#3}\...
l.30 \BOOKMARK
               [3][-]{subsubsection.3.1.2}{Data Scaling}{subsection.3.1}% 30
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@BOOKMARK doesn't match its definition.
\@ifnextchar ...eserved@d =#1\def \reserved@a {#2}
                                                  \def \reserved@b {#3}\futu...
l.30 \BOOKMARK
               [3][-]{subsubsection.3.1.2}{Data Scaling}{subsection.3.1}% 30
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
\@ifnextchar ... \reserved@a {#2}\def \reserved@b 
                                                  {#3}\futurelet \@let@token...
l.30 \BOOKMARK
               [3][-]{subsubsection.3.1.2}{Data Scaling}{subsection.3.1}% 30
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Argument of \@@BOOKMARK has an extra }.
<inserted text> 
                \par 
l.30 \BOOKMARK
               [3][-]{subsubsection.3.1.2}{Data Scaling}{subsection.3.1}% 30
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.30 \BOOKMARK
               [3][-]{subsubsection.3.1.2}{Data Scaling}{subsection.3.1}% 30
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \def doesn't match its definition.
l.31 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.31 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \protect doesn't match its definition.
l.32 \protect \let \reserved@d
                               =[\def \def \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
l.32 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.32 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \protect doesn't match its definition.
l.33 \protect \let \reserved@d
                               =[\def \def \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
l.33 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.33 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \protect doesn't match its definition.
l.34 \protect \let \reserved@d
                               =[\def \def \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
l.34 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.34 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \protect doesn't match its definition.
l.35 \protect \let \reserved@d
                               =[\def \def \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
l.35 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.35 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \protect doesn't match its definition.
l.36 \protect \let \reserved@d
                               =[\def \def \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
l.36 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.36 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

! Use of \protect doesn't match its definition.
l.37 \protect \let \reserved@d
                               =[\def \def \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \def doesn't match its definition.
l.37 \protect \let \reserved@d =[\def \def
                                           \begingroup \let \@@protect \prot...
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing control sequence inserted.
<inserted text> 
                \inaccessible 
l.37 ... \edef Price Reconstruction{[1][-]}\edef {
                                                  \futurelet }\toks@ {\endgr...
Please don't say `\def cs{...}', say `\def\cs{...}'.
I've inserted an inaccessible control sequence so that your
definition will be completed without mixing me up too badly.
You can recover graciously from this error, if you're
careful; see exercise 27.2 in The TeXbook.

)
Runaway argument?
{3}]\endgroup \endgroup \ifx \WriteBookmarks \relax \else \if@filesw \ETC.
! Paragraph ended before \@@BOOKMARK was complete.
<to be read again> 
                   \par 
l.186 \begin{document}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Use of \protect doesn't match its definition.
\normalfont ->\protect \normalfont  
                                    
l.186 \begin{document}
                      
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

)
! Incomplete \iffalse; all text was ignored after line 186.
<inserted text> 
                \fi 
<*> the2.tex
            
The file ended while I was skipping conditional text.
This kind of error happens when you say `\if...' and forget
the matching `\fi'. I've inserted a `\fi'; this might work.

! Emergency stop.
<*> the2.tex
            
*** (job aborted, no legal \end found)

 
Here is how much of TeX's memory you used:
 28791 strings out of 492995
 527743 string characters out of 6132704
 697231 words of memory out of 5000000
 31855 multiletter control sequences out of 15000+600000
 3940 words of font info for 15 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 54i,0n,73p,1498b,9369s stack positions out of 5000i,500n,10000p,200000b,80000s
!  ==> Fatal error occurred, no output PDF file produced!
